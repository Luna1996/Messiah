function ExampleBuff(i)
  Debug.Log(i)
end

function ChurchBuild(i)
  local location="教堂"
  GameManager.handView:AddCard('BuildCard 教堂建造,教堂p,'..location..',Build_church_effect')
end

function ChurchFaith(i)
  GameManager.AddResource(ResourceType.Faith,GameManager.gameData.maxWorker)
end
function testbuff(t)
  Debug.Log(t)
end

function Buff_Relic105(i)
  GameManager.AddResource(ResourceType.Mine,5)
end

function Buff_Relic109(i)
  CostModifiter = CostModifiter + 1
end

function add_maxWorker(i)
  GameManager.gameData.maxWorker = GameManager.gameData.maxWorker +1
  --GameManager.gameData.idleWorker = GameManager.gameData.idleWorker +1
end

function Buff_Relic110(i)
  GameManager.AddResource(ResourceType.Mine,1)
end


function Buff_Relic209(i)
  GameManager.AddResource(ResourceType.Mine,200)
end

function Buff_Relic212(i)
  --获得所有手牌的临时复制
end

function Buff_Relic303(i)
  GameManager.SubResource(ResourceType.Tech,GameManager.GetResource(ResourceType.Tech))
end


function Buff_Relic306(i)
  GameManager.SubResource(Resource.Mine,5)
end

function Buff_Relic307(i)
  GameManager.AddResource(ResourceType.Food,33)
  GameManager.SubResource(ResourceType.Mine,3)
  GameManager.SubResource(ResourceType.Wood,3)
  GameManager.SubResource(ResourceType.Iron,3)
end

function Buff_Relic1061(i)
  CostModifiter = CostModifiter -999
  Buff("Buff_Relic1062",GameEvent.IG_ResourceCardPlay,BuffType.OneShot,1,'buff503',"fasdfasdf")
end

function Buff_Relic1062(i)
  CostModifiter = CostModifiter + 999
end

function Buff_DrawCard(i)
  GameManager.DrawCard()
end

function Buff_Relic205(i)
  GameManager.AddResource(ResourceType.Mine,1)
end

function BuildTip(i,args)
  local t = split(args,',')
  return t[2],t[1]-i
end

function Build_church_01(i)
  local location="教堂"
  GameManager.handView:AddCard('BuildCard 教堂修缮,教堂pd,'..location..',Build_church_01_effect')
end

function Build_farm_21(i)
  local location="温室"
  GameManager.handView:AddCard('BuildCard 温室升级,温室pd,'..location..',Build_farm_21_effect')
end


function ReplaceCard(src,dist)
  if GameManager.gameData.drawPile:Contains(src) then GameManager.ReplaceCard(DeckType.OriginalDeckAndDrawPile,src,dist) end
  Debug.Log(GameManager.handView.hands.Count)
  for i=0,GameManager.handView.hands.Count-1 do
    Debug.Log(src)
    local s = GameManager.handView.hands[i]
    Debug.Log(s.luacard:getCardFullName())
    if s.luacard:getCardFullName()==src then
      GameManager.handView:RemoveCard(s.luacard)
      s.luacard.cardView:Dissolve()
      GameManager.handView:AddCard(dist)
    end
  end
end

function Build_farm(i)
  --GameManager.Build(nil,"温室")
  local location ="温室"
  GameManager.handView:AddCard('BuildCard 温室建造,温室p,'..location..',Build_farm_effect')
end



function Build_house()
  local buildingdeck = GameManager.gameData.buildingAcquired
  local houseList = {"住宅","住宅_2","住宅_1","住宅_3","住宅_6","住宅_7","住宅_4","住宅_5","住宅_8","住宅_9","住宅_10","住宅_11","住宅_12"}
  for i=1,#houseList do if not buildingdeck:Contains(houseList[i]) then return houseList[i] end end
  return houseList[#houseList]
end


function Build_house_01(i)
  local location = Build_house()
  GameManager.handView:AddCard('BuildCard 住房扩建,住宅pd,'..location..',Build_house_01_effect')
end

function Build_house_11(i)
  local location = Build_house()
  GameManager.handView:AddCard('BuildCard 住房装修,住宅pd,'..location..',Build_house_11_effect')
  
end

function Build_house_basic(i)
  local location = Build_house()
  GameManager.handView:AddCard('BuildCard 住宅建筑,住宅p,'..location..',Build_house_basic_effect')
end


function Build_iron()
  local buildingdeck = GameManager.gameData.buildingAcquired
  local ironList={"钢厂","钢厂_1"}
  for i=1,#ironList do if not buildingdeck:Contains(ironList[i]) then return ironList[i] end end
  return ironList[#ironList]
end


function Build_iron_basic(i)
  local location = Build_iron()
  GameManager.handView:AddCard('BuildCard 钢厂建设,钢厂p,'..location..',Build_iron_basic_effect')
end


function Build_mine()
  local buildingdeck = GameManager.gameData.buildingAcquired
  local mineList ={"采煤场","采煤场_1","采煤场_2","采煤场_3"}
  for i=1,#mineList do if not buildingdeck:Contains(mineList[i]) then return mineList[i] end end
  return mineList[#mineList]
end

function Build_mine_01(i)
  local location = Build_mine()
  GameManager.handView:AddCard('BuildCard 改进矿机,采煤机pd,'..location..',Build_mine_01_effect')
end


function Build_mine_02(i)
  local location = Build_mine()
  GameManager.handView:AddCard('BuildCard 管线铺设,采煤机pd,'..location..',Build_mine_02_effect')
end


function Build_mine_11(i)
  local location = "钢厂"
  GameManager.handView:AddCard('BuildCard 高炉升级,钢厂pd,'..location..',Build_mine_11_effect')
end


function Build_mine_21(i)
  
  local location =Build_iron()
  GameManager.handView:AddCard('BuildCard 联轴运转,钢厂pd,'..location..',Build_mine_21_effect')
  
end

function Draw_card()
  GameManager.DrawCard()
end


function mine_consumption()
  if GameManager.GetResource(ResourceType.Mine)>0 then
  GameManager.SetResource(ResourceType.Mine,GameManager.GetResource(ResourceType.Mine)-1)
  end
end

function Build_mine_22(i)
  local location = Build_iron()
  GameManager.handView:AddCard('BuildCard 源能切割器,钢厂pd,'..location..',Build_mine_22_effect')
end


function Build_mine_basic(i)
  local location = Build_mine()
  GameManager.handView:AddCard('BuildCard 能源矿机,采煤机p,'..location..',Build_mine_basic_effect')
end



function Build_mush()
  local buildingdeck = GameManager.gameData.buildingAcquired
  local mushList = {"蘑菇","蘑菇_1","蘑菇_2"}
  for i=1,#mushList do if not buildingdeck:Contains(mushList[i]) then return mushList[i] end end
  return mushList[#mushList]
end

function Build_mush_basic(i)
  local location = Build_mush()
  GameManager.handView:AddCard('BuildCard 蘑菇农场,蘑菇p,'..location..',Build_mush_basic_effect')
end

function Build_mush_01(i)
  local location = Build_mush()
  GameManager.handView:AddCard('BuildCard 蘑菇水培池,蘑菇pd,'..location..',Build_mush_01_effect')
end



function Build_mush_11(i)
  local location = Build_mush()
  GameManager.handView:AddCard('BuildCard 孢子实验,蘑菇pd,'..location..',Build_mush_11_effect')
end

function Build_pub(i)
  local location = "酒馆"
  GameManager.handView:AddCard('BuildCard 酒馆,酒馆p,'..location..',Build_pub_effect')
end

function BuffTayaThePirate(i)--海盗祝福 每回合 +1矿石 +1石材 +1钢铁
  GameManager.AddResource(ResourceType.Mine,1)
  GameManager.AddResource(ResourceType.Wood,1)
  GameManager.AddResource(ResourceType.Iron,1)
end

function BuffAndreTheDetective(i) --侦探祝福 每回合+1科技值
  GameManager.AddResource(ResourceType.Tech,1)
end

function BuffFrostyRoland(i) --医生祝福 每回合获得2点信仰
  GameManager.AddResource(ResourceType.Food,2)
end

function BuffTahriTheGirl(i) --抽卡时增加1点能量（总人口不变）
  GameManager.AddResource(ResourceType.Mine,1)
end

function build_clinic(i)
  --GameManager.Build(nil,"医院")
  local location = "医院"
  GameManager.handView:AddCard('BuildCard 诊所建造,医院p,'..location..',Build_clinic_effect') 
end

function Buff_Building_weather_21(i)
  local location = "RawImage"
  --有问题
  GameManager.handView:AddCard('BuildCard 天气控制器,气象站pd,'..location..',Build_weather_21_effect')
end



function Buff_Building_weather(i)
  GameManager.Build(nil,"RawImage")
  local location = "RawImage"
  GameManager.handView:AddCard('BuildCard 气象站,气象站p,'..location..',Build_weather_effect')
end


function Buff_Building_research(i)
  GameManager.Build(nil,"研究站")
  local location = "研究站"
  GameManager.handView:AddCard('BuildCard 研究站,研究所p,'..location..',Build_research_effect')
end

function Buff_Building_research_room(i)
  local location ="研究站"
  GameManager.handView:AddCard('BuildCard 研究室,研究所pd,'..location..',Build_research_room_effect')
end


function Build_wood()
  local buildingdeck = GameManager.gameData.buildingAcquired
  local mineList ={"采石场","采石场_1","采石场_2","采石场_3"}
  for i=1,#mineList do if not buildingdeck:Contains(mineList[i]) then return mineList[i] end end
  return mineList[#mineList]
end

function Buff_Building_wood(i)
  local location = Build_wood()
  GameManager.AddCardsToHand({'BuildCard 采石场,采石场p,'..location..',Build_wood_effect'})
  
end


