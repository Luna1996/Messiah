function ExampleBuff(i)
  Debug.Log(i)
end

function ChurchBuild(i)
  GameManager.Build(nil,"教堂")
  Buff("ChurchFaith",GameEvent.ExitMainPhase,BuffType.Repeat,-1,"buff511","教堂:\n每回合根据人口产出信仰值")
end
function ChurchFaith(i)
  GameManager.AddResource(ResourceType.Faith,GameManager.gameData.maxWorker)
end
function testbuff(t)
  Debug.Log(t)
end

function Buff_Relic105(i)
  GameManager.AddResource(ResourceType.Mine,5)
end

function Buff_Relic109(i)
  CostModifiter = CostModifiter + 1
end

function add_maxWorker(i)
  GameManager.gameData.maxWorker = GameManager.gameData.maxWorker +1
  GameManager.gameData.idleWorker = GameManager.gameData.idleWorker +1
end

function Buff_Relic110(i)
  GameManager.AddResource(ResourceType.Mine,1)
end


function Buff_Relic209(i)
  GameManager.AddResource(ResourceType.Mine,200)
end

function Buff_Relic212(i)
  --获得所有手牌的临时复制
end

function Buff_Relic303(i)
  GameManager.SubResource(ResourceType.Tech,GameManager.GetResource(ResourceType.Tech))
end


function Buff_Relic306(i)
  GameManager.SubResource(Resource.Mine,5)
end

function Buff_Relic307(i)
  GameManager.AddResource(ResourceType.Food,33)
  GameManager.SubResource(ResourceType.Mine,3)
  GameManager.SubResource(ResourceType.Wood,3)
  GameManager.SubResource(ResourceType.Iron,3)
end

function Buff_Relic1061(i)
  CostModifiter = CostModifiter -999
  Buff("Buff_Relic1062",GameEvent.IG_ResourceCardPlay,BuffType.OneShot,1,'buff503',"fasdfasdf")
end

function Buff_Relic1062(i)
  CostModifiter = CostModifiter + 999
end

function Buff_DrawCard(i)
  GameManager.DrawCard()
end

function Buff_Relic205(i)
  GameManager.AddResource(ResourceType.Mine,1)
end

function BuildTip(i,args)
  local t = split(args,',')
  return t[2],t[1]-i
end

function Build_church_01(i)
  GameManager.Build(nil,"教堂")
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"Pray01","Pray02"})
end

function Build_farm_21(i)
  GameManager.Build(nil,"温室")
  ReplaceCard("BasicFarm01","BasicFarm02")
end

function ReplaceCard(src,dist)
  if GameManager.gameData.drawPile:Contains(src) then GameManager.ReplaceCard(DeckType.OriginalDeckAndDrawPile,src,dist) end
  Debug.Log(GameManager.handView.hands.Count)
  for i=0,GameManager.handView.hands.Count-1 do
    Debug.Log(src)
    local s = GameManager.handView.hands[i]
    Debug.Log(s.luacard:getCardFullName())
    if s.luacard:getCardFullName()==src then
      GameManager.handView:RemoveCard(s.luacard)
      s.luacard.cardView:Dissolve()
      GameManager.handView:AddCard(dist)
    end
  end
end

function Build_farm(i)
  GameManager.Build(nil,"温室")
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"BasicFarm01","BasicFarm01"})
end


function Build_house()
  local houseList = {"住宅","住宅_2","住宅_1","住宅_3","住宅_6","住宅_7","住宅_4","住宅_5","住宅_8","住宅_9","住宅_10","住宅_11","住宅_12"}
  GameManager.Build(nil,houseList[math.random(1,#houseList)])
end


function Build_house_01(i)
  Build_house()
  GameManager.gameData.maxWorker = GameManager.gameData.maxWorker+2
  GameManager.gameData.idleWorker = GameManager.gameData.idleWorker +2
end

function Build_house_11(i)
  Build_house()
  GameManager.AddResource(ResourceType.Faith,40)
end

function Build_house_basic(i)
  Build_house()
  GameManager.gameData.maxWorker = GameManager.gameData.maxWorker + 1
  GameManager.gameData.idleWorker = GameManager.gameData.idleWorker +1
end

function Build_iron()
  local ironList={"钢厂","钢厂_1"}
  GameManager.Build(nil,ironList[math.random(1,#ironList)])
end

function Build_iron_basic(i)
  Build_iron()
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"BasicIron01","BasicIron01"})
end

function Build_mine()
  local mineList ={"采煤场","采煤场_1","采煤场_2","采煤场_3"}
  GameManager.Build(nil,mineList[math.random(1,#mineList)])
end
function Build_mine_01(i)
  Build_mine()
  ReplaceCard("BasicMine01", "BasicMine02")
end
function Build_mine_02(i)
  Build_mine()
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"BasicMine01",})
end
function Build_mine_11(i)
  Build_mine()
  GameManager.gameData.resourcesModifitor[ResourceType.Iron.value__] = GameManager.gameData.resourcesModifitor[ResourceType.Iron.value__]+2
end
function Build_mine_21(i)
  Build_iron()
  Buff("Draw_card",
  GameEvent.IG_ResourceCardPlay,
  BuffType.Repeat,
  -1,
  "buff205",
  "连轴运转:\n打出资源牌时再抽一张牌")
end

function Draw_card()
  GameManager.DrawCard()
end
function mine_consumption()
  if GameManager.GetResource(ResourceType.Mine)>0 then
  GameManager.SetResource(ResourceType.Mine,GameManager.GetResource(ResourceType.Mine)-1)
  end
end

function Build_mine_22(i)
  Build_iron()
  for i=0,5 do
    GameManager.gameData.resourcesModifitor[i] = GameManager.gameData.resourcesModifitor[i] +2
  end
  Buff("mine_consumption",GameEvent.IG_ResourceCardPlay,BuffType.Repeat,-1,"buff306","源能切割:\n每打出1张资源牌额外消耗1点能源，所有资源卡产量+2")
end

function Build_mine_basic(i)
  Build_mine()
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"BasicMine01","BasicMine01"})
end

function Build_mush()
  local mushList = {"蘑菇","蘑菇_1","蘑菇_2"}
  GameManager.Build(nil,mushList[math.random(1,#mushList)])
end

function Build_mush_basic(i)
  Build_mush()
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"BasicMush01","BasicMush01"})
end

function Build_mush_01(i)
  Build_mush()
  ReplaceCard("BasicMush01", "BasicMush02")
end

function Build_mush_11(i)
  Build_mush()
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"Mush_02","Mush_02"})
end

function Build_pub(i)
  GameManager.Build(nil,"酒馆")
  CostModifiter = CostModifiter - 1
end


function BuffTayaThePirate(i)--海盗祝福 每回合 +6矿石 +4石材 +4钢铁
  GameManager.AddResource(ResourceType.Mine,6)
  GameManager.AddResource(ResourceType.Wood,4)
  GameManager.AddResource(ResourceType.Iron,4)
end

function BuffAndreTheDetective(i) --侦探祝福 每回合+2科技值
  GameManager.AddResource(ResourceType.Tech,3)
end

function BuffFrostyRoland(i) --医生祝福 人力资源发生变化时获得1点食物
  GameManager.AddResource(ResourceType.Food,1)
end

function BuffTahriTheGirl(i) --抽卡时增加1点可用人口（总人口不变）
  if GameManager.gameData.idleWorker < GameManager.gameData.maxWorker then
  GameManager.gameData.idleWorker = GameManager.gameData.idleWorker+1 end
end

function build_clinic(i)
  GameManager.Build(nil,"医院")
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,{"Nurse","Nurse"})
end