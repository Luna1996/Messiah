Building_farm_21 = class(CardBase,"Building_farm_21")
local this = Building_farm_21

function this:new()
  self.cardView = nil
  self.name = "温室升级"
  self.frame = "资源牌面s"
  self.image = "温室p"
  self.desc = "提高温室的工作产出"
  self.boundingCard="BasicFarm02"   --把牌组内所有的BasicFarm01替换成BasicFarm02
  self.deletingCard="BasicFarm01"
  self.inHand = false
  --self.boundingBuff={}
  self.buildingConsumption={20,20,10,4}
  self.cost =self.buildingConsumption[3]
  self.rounds =self.buildingConsumption[4]
end

function this:onPlay()
  if self:enoughLabor(self.cost+CostModifiter) and self:enoughRcBuilding(self.buildingConsumption) then
    self:subRcBuilding(self.buildingConsumption)
    self:laborCost(self.cost+CostModifiter,self.rounds)
    GameManager.Exile(self)
    GameManager.ReplaceCard(DeckType.OriginalDeckAndDrawPile,self.delectingCard,self.boundingCard)
  else
    HandView:AddToHand(self.cardView)
  end
end

