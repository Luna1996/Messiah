CardBase = class(Object, "CardBase")
local this = CardBase

function this:new(arg)
  self.cardView = nil
  self.name = "卡 名"
  self.frame = "CardFrame_1"
  self.image = "placeholder"
  self.desc = "<color=red>规</color><b><color=green>则</color><color=blue>说</color></b>明"
  self.cost = nil

  self.inHand = false
end

function this:setCardView()
  if self.cost then
    self.cardView.mainCost.gameObject:SetActive(true)
    local color = "white"
    if CostModifiter < 0 then
      color = "green"
    elseif CostModifiter > 0 then
      color = "red"
    end
    local cost = self.cost + CostModifiter
    if cost < 0 then cost = 0 end
    self.cardView.mainCost.text = "<color="..color..">"..cost.."</color>"
  end
end

function this:onPlay()
  HandView:AddToHand(self.cardView)
end

function this:canPlay()
  return true
end
    
function this:addToHand()
end
    
function this:rmvFrHand()
end

function this:getCardFullName()
  return self.className
end

function this:enoughRcBuilding(buildingConsumption)
  local woodc = buildingConsumption[1]
  local ironc = buildingConsumption[2]
  if woodc<=GameManager.GetResource(ResourceType.Wood) and ironc<=GameManager.GetResource(ResourceType.Iron) then
    return true
  else
    return false
  end
end

function this:subRcBuilding(buildingConsumption)
  local woodc = buildingConsumption[1]
  local ironc = buildingConsumption[2]
  GameManager.SubResource(ResourceType.Wood,woodc)
  GameManager.SubResource(ResourceType.Iron,ironc)
end

function this:enoughLabor(labor)
  if GameManager.gameData.idleWorker>=labor then
    return true
  else
    return false
  end
end

function this:laborCost(labor,rounds)
  GameManager.gameData.idleWorker = GameManager.gameData.idleWorker - labor
  GameManager.gameData.occupiedWorker = GameManager.gameData.occupiedWorker + labor
  GameManager.CreateBuff(GameEvent.EnterMainPhase,BuffType.OneShot,rounds,
  function()
    GameManager.gameData.idleWorker = GameManager.gameData.idleWorker + labor
    GameManager.gameData.occupiedWorker = GameManager.gameData.occupiedWorker - labor
    end)
  Debug.Log(GameManager.gameData.idleWorker)
  Debug.Log(GameManager.gameData.occupiedWorker)
end

function this:enoughRc(RcType,num)
  if GameManager.GetResource(RcType) >= num then return true
  else return false end
end