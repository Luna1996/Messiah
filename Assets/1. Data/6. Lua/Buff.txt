function ExampleBuff(i)
  Debug.Log(i)
end

function AddBackLabor(i)
  GameManager.gameData.idleWorker = GameManager.gameData.idleWorker + 1
  Debug.Log(CurrentCost)
end

function ChurchBuild(i)
  GameManager.Build(nil,"教堂")
  Buff("ChurchFaith",GameEvent.ExitMainPhase,BuffType.Repeat,-1,"buff511","每回合根据人口产出信仰值")
end
function ChurchFaith(i)
  GameManager.AddResource(ResourceType.Faith,GameManager.gameData.maxWorker)
end
function testbuff(t)
  Debug.Log(t)
end

function Buff_Relic105(i)
  GameManager.AddResource(ResourceType.Mine,5)
end

function Buff_Relic109(i)
  CostModifiter = CostModifiter + 1
end

function add_maxWorker(i)
  GameManager.gameData.MaxWorker = GameManager.gameData.MaxWorker +1
end

function Buff_Relic110(i)
  GameManager.AddResource(ResourceType.Mine,1)
end

function Buff_BasicFarm01(i)
  GameManager.AddResource(ResourceType.Food,30)
end

function Buff_BasicFarm02(i)
  GameManager.AddResource(ResourceType.Food,60)
end

function Buff_Relic209(i)
  GameManager.AddResource(ResourceType.Mine,200)
end

function Buff_Relic212(i)
  --获得所有手牌的临时复制
end

function Buff_Relic303(i)
  GameManager.SubResource(ResourceType.Tech,GameManager.GetResource(ResourceType.Tech))
end

function Buff_Building_weather(i)
  GameManager.Build(nil,"RawImage")
  Debug.Log('1')
  GameManager.gameData.resourcesModifitor[ResourceType.Food.value__] = GameManager.gameData.resourcesModifitor[ResourceType.Food.value__] + 1
end


function Buff_Building_research(i, args)
  GameManager.Build(nil,"研究站")
  local t = split(args, ',')
  local temp = split(t[3],';')
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,temp)
end

function Buff_Building_research_room(i, args)
  GameManager.Build(nil,"研究站")
  local t = split(args, ',')
  local temp = split(t[3],';')
  GameManager.AddCard(DeckType.OriginalDeckAndDrawPile,temp)
end


function Buff_get_relics(i, args)
  Relic202.apply()
end

function Xturn(i, args)
  local t = split(args,',')
  return "下"..t[1]-i.."回合,"..t[2], t[1]-i
end

function XLaborTurn(i, args)
  local t = split(args,',')
  return t[1]..t[2], t[3]-i
end

function AddBackLabor(i, args)
  local t = split(args, ',')
  GameManager.gameData.idleWorker = GameManager.gameData.idleWorker + tonumber(t[1])
end

